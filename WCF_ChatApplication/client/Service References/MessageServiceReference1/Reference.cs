//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace client1.MessageServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageServiceReference1.IBroadcast", CallbackContract=typeof(client1.MessageServiceReference1.IBroadcastCallback))]
    public interface IBroadcast {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBroadcast/SendMessage")]
        void SendMessage(string msg, System.Collections.Generic.List<string> memberId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBroadcast/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string msg, System.Collections.Generic.List<string> memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBroadcast/RegisterClient", ReplyAction="http://tempuri.org/IBroadcast/RegisterClientResponse")]
        void RegisterClient(string name, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBroadcast/RegisterClient", ReplyAction="http://tempuri.org/IBroadcast/RegisterClientResponse")]
        System.Threading.Tasks.Task RegisterClientAsync(string name, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBroadcast/UnRegisterClient", ReplyAction="http://tempuri.org/IBroadcast/UnRegisterClientResponse")]
        void UnRegisterClient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBroadcast/UnRegisterClient", ReplyAction="http://tempuri.org/IBroadcast/UnRegisterClientResponse")]
        System.Threading.Tasks.Task UnRegisterClientAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBroadcastCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBroadcast/SendToAll")]
        void SendToAll(string message, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBroadcast/ActiveUsers")]
        void ActiveUsers(int activenumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBroadcastChannel : client1.MessageServiceReference1.IBroadcast, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BroadcastClient : System.ServiceModel.DuplexClientBase<client1.MessageServiceReference1.IBroadcast>, client1.MessageServiceReference1.IBroadcast {
        
        public BroadcastClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public BroadcastClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public BroadcastClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BroadcastClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BroadcastClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(string msg, System.Collections.Generic.List<string> memberId) {
            base.Channel.SendMessage(msg, memberId);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string msg, System.Collections.Generic.List<string> memberId) {
            return base.Channel.SendMessageAsync(msg, memberId);
        }
        
        public void RegisterClient(string name, string id) {
            base.Channel.RegisterClient(name, id);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string name, string id) {
            return base.Channel.RegisterClientAsync(name, id);
        }
        
        public void UnRegisterClient(string id) {
            base.Channel.UnRegisterClient(id);
        }
        
        public System.Threading.Tasks.Task UnRegisterClientAsync(string id) {
            return base.Channel.UnRegisterClientAsync(id);
        }
    }
}
